[{"categories":["C","备忘","更多"],"content":"C的函数 ","date":"2025-01-23","objectID":"/zh-cn/post/memo/c-function/c-function/:0:0","series":null,"tags":["C","备忘","更多"],"title":"C语言的函数","uri":"/zh-cn/post/memo/c-function/c-function/#"},{"categories":["C","备忘","更多"],"content":" 1 目录 把字符串赋值到变量中 ","date":"2025-01-23","objectID":"/zh-cn/post/memo/c-function/c-function/:1:0","series":null,"tags":["C","备忘","更多"],"title":"C语言的函数","uri":"/zh-cn/post/memo/c-function/c-function/#目录"},{"categories":["C","备忘","更多"],"content":" 2 把字符串赋值到变量中 函数 头文件 描述 sprintf string.h 把格式化的字符串赋值到变量中. sprintf(str, “%s %s\\n”, s1, s2) strncpy string.h 把别的变量的字符串赋到变量中. strncpy(str, source, length) ","date":"2025-01-23","objectID":"/zh-cn/post/memo/c-function/c-function/:2:0","series":null,"tags":["C","备忘","更多"],"title":"C语言的函数","uri":"/zh-cn/post/memo/c-function/c-function/#把字符串赋值到变量中"},{"categories":["Proxmox","Gist","更多"],"content":"记录一些关于Proxmox的东西 ","date":"2025-01-04","objectID":"/zh-cn/post/gist/proxmox/proxmox/:0:0","series":null,"tags":["Proxmox","IPV6","Gist","更多"],"title":"Proxmox","uri":"/zh-cn/post/gist/proxmox/proxmox/#"},{"categories":["Proxmox","Gist","更多"],"content":" 1 在无特权的LXC容器中挂载NFS/CIFS教程 ","date":"2025-01-04","objectID":"/zh-cn/post/gist/proxmox/proxmox/:1:0","series":null,"tags":["Proxmox","IPV6","Gist","更多"],"title":"Proxmox","uri":"/zh-cn/post/gist/proxmox/proxmox/#在无特权的lxc容器中挂载nfscifs"},{"categories":["Gist","VPS","更多"],"content":" 1 起因很多云服务供应商只提供了公网ipv4的虚拟机。但是因为一些原因, 我们需要用到ipv6的网络来进行访问。这里我们用到的是ipv4到ipv6的转换服务。 ","date":"2024-12-22","objectID":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/:1:0","series":null,"tags":["IPV6","Gist","VPS","More"],"title":"Connect to IPV6 network with public-ipv4-only VPS","uri":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/#起因"},{"categories":["Gist","VPS","更多"],"content":" 2 步骤 在HE.net上注册免费的ipv4到ipv6的转换服务 1.1. 创建通道(create tunnel) 1.2. 根据提示的配置(example configurations), 在虚拟机上配置ipv6穿透 等待服务就绪 ","date":"2024-12-22","objectID":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/:2:0","series":null,"tags":["IPV6","Gist","VPS","More"],"title":"Connect to IPV6 network with public-ipv4-only VPS","uri":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/#步骤"},{"categories":["Gist","VPS","更多"],"content":" 3 IPV6配置穿透服务时候的问题 He.net无法使用gmail和outlook注册 解决方案:用163注册, 注册成功的时间: 2024-12-21 He.net无法创建ipv6穿透, 原因是\"这个网络受到限制(This network is restricted)\" 可能的原因是He.net把ip地址丢进了黑名单 解决方案: 创建tunnel时，先使用白名单的ipv4地址。再修改ip, 成功创建的时间: 2024-12-21 He.net的穿透服务如果一段时间没有活动，是会自动关闭的 解决方案: 每10分钟ping一次ipv6网站. Sh: crontab -l 2\u003e/dev/null | echo \"*/10 * * * * ping -c 2 ipv6.google.com\" | crontab - ","date":"2024-12-22","objectID":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/:3:0","series":null,"tags":["IPV6","Gist","VPS","More"],"title":"Connect to IPV6 network with public-ipv4-only VPS","uri":"/zh-cn/post/gist/vps-ipv6/vps-ipv6/#ipv6配置穿透服务时候的问题"},{"categories":["更多"],"content":"Nginx Proxy Manager ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:0:0","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#"},{"categories":["更多"],"content":" 1 目录 自签名证书 ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:1:0","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#目录"},{"categories":["更多"],"content":" 2 自签名证书有些项目部署需要 https, 但是它们会在局域网上运行, 而且没有公共域名. 所以需要生成自签名证书. ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:0","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#自签名证书"},{"categories":["更多"],"content":" 2.1 创建密钥 bash openssl genrsa -des3 -out private.key 2048 输出: bash root@unginx:/home/pi/certs# openssl genrsa -des3 -out private.key 2048 Enter PEM pass phrase: # 输入 pass phrase Verifying - Enter PEM pass phrase: # 再次输入 pass phrase ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:1","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#创建密钥"},{"categories":["更多"],"content":" 2.2 生成公钥 bash openssl rsa -in private.key -out server.key 输出: bash root@unginx:/home/pi/certs# openssl rsa -in private.key -out server.key Enter pass phrase for private.key: # 输入 pass phrase writing RSA key ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:2","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#生成公钥"},{"categories":["更多"],"content":" 2.3 生成证书 bash openssl req -new -days 3650 -key server.key -out server.csr output: bash root@unginx:/home/pi/certs# openssl req -new -days 3650 -key server.key -out server.csr Ignoring -days without -x509; not generating a certificate You are about to be asked to enter information that will be incorporated into your certificate request. What you are about to enter is what is called a Distinguished Name or a DN. There are quite a few fields but you can leave some blank For some fields there will be a default value, If you enter '.', the field will be left blank. ----- Country Name (2 letter code) [AU]:cn State or Province Name (full name) [Some-State]:zj Locality Name (eg, city) []:sx Organization Name (eg, company) [Internet Widgits Pty Ltd]:wt Organizational Unit Name (eg, section) []:wt Common Name (e.g. server FQDN or YOUR name) []:*.ubuntunginx.lan # 非常重要: *.ubuntunginx.lan 或者 ip address Email Address []: Please enter the following 'extra' attributes to be sent with your certificate request A challenge password []: An optional company name []: ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:3","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#生成证书"},{"categories":["更多"],"content":" 2.4 生成自签名证书 bash openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 3650 输出: bash root@unginx:/home/pi/certs# openssl x509 -in server.csr -out server.crt -req -signkey server.key -days 3650 Certificate request self-signature ok subject=C = cn, ST = zj, L = sx, O = wt, OU = wt, CN = *.ubuntunginx.lan ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:4","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#生成自签名证书"},{"categories":["更多"],"content":" 2.5 创建用于 Diffie-Hellman 交换协议的自定义参数 (可选) bash openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048 输出: bash root@VM-12-9-ubuntu:~/ca# openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048 Generating DH parameters, 2048 bit long safe primedate":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:5","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#创建用于-diffie-hellman-交换协议的自定义参数-可选"},{"categories":["更多"],"content":" 2.6 使用 bash root@unginx:/home/pi/certs# ls private.key server.crt server.csr server.key 加入 nginx 配置 bash ssl_certificate /home/pi/certs/server.crt ssl_certificate_key /home/pi/certs/server.key ","date":"2022-05-29","objectID":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/:2:6","series":null,"tags":["更多","nginx","https","openssl"],"title":"Nginx Proxy Manager","uri":"/zh-cn/post/docker/nginx-proxy-manager/nginx-proxy-manager/#使用"},{"categories":["备忘","更多"],"content":"OpenWRT ","date":"2022-05-28","objectID":"/zh-cn/post/memo/openwrt/openwrt/:0:0","series":null,"tags":["OpenWRT","备忘","更多"],"title":"OpenWRT","uri":"/zh-cn/post/memo/openwrt/openwrt/#"},{"categories":["备忘","更多"],"content":" 1 目录 子域名及多级域名的 IP 通配 ","date":"2022-05-28","objectID":"/zh-cn/post/memo/openwrt/openwrt/:1:0","series":null,"tags":["OpenWRT","备忘","更多"],"title":"OpenWRT","uri":"/zh-cn/post/memo/openwrt/openwrt/#目录"},{"categories":["备忘","更多"],"content":" 2 子域名及多级域名的 IP 通配","date":"2022-05-28","objectID":"/zh-cn/post/memo/openwrt/openwrt/:2:0","series":null,"tags":["OpenWRT","备忘","更多"],"title":"OpenWRT","uri":"/zh-cn/post/memo/openwrt/openwrt/#子域名及多级域名的-ip-通配"},{"categories":["备忘","更多"],"content":" 2.1 介绍IP 可以在 网络 -\u003e DHCP/DNS -\u003e 静态地址 固定. 默认的本地域名是根据主机名来的. 例子: ubuntuNginx.lan 是 ubuntuNginx 机器的本地域名. 然而, 如果我想所有多级域名都指向同一 IP 地址, 我必须在 网络 -\u003e 主机映射 中手动添加每个子域名. ","date":"2022-05-28","objectID":"/zh-cn/post/memo/openwrt/openwrt/:2:1","series":null,"tags":["OpenWRT","备忘","更多"],"title":"OpenWRT","uri":"/zh-cn/post/memo/openwrt/openwrt/#介绍"},{"categories":["备忘","更多"],"content":" 2.2 添加通配LUCI 界面没办法添加通配, 只能在 ssh 或者命令行中操作 在这个文件 /etc/dnsmasq.conf 添加下面这行 bash # '.' 是必须的 address=/.[域名]/[ip] 例子: bash # '.' 是必须的 address=/.ubuntunginx.lan/192.168.0.2 ","date":"2022-05-28","objectID":"/zh-cn/post/memo/openwrt/openwrt/:2:2","series":null,"tags":["OpenWRT","备忘","更多"],"title":"OpenWRT","uri":"/zh-cn/post/memo/openwrt/openwrt/#添加通配"},{"categories":["c++","备忘","更多"],"content":" 1 编程 内敛函数 inline: 少量代码, 频繁调用, 没有loop explicit: 防止程序隐式调用 NULL变量 分配内存 NULL变量 指针分配内存需要return指针变量, 不能传入NULL指针变量 ","date":"2022-02-09","objectID":"/zh-cn/post/memo/cpp/cpp/:1:0","series":null,"tags":["c++","备忘","更多"],"title":"C/C++","uri":"/zh-cn/post/memo/cpp/cpp/#编程"},{"categories":["FreeRTOS","备忘"],"content":" 1 Task xTaskCreateUniversity 中 coreID 为-1, 可以自动选择 core xTaskCreateUniversity 中 TaskHandler_t 不能作为 void* parameter 的成员 ","date":"2022-02-09","objectID":"/zh-cn/post/memo/freertos/freertos/:1:0","series":null,"tags":["FreeRTOS","备忘"],"title":"FreeRTOS","uri":"/zh-cn/post/memo/freertos/freertos/#task"},{"categories":["编程","备忘","更多"],"content":" 1 程序 先规划整体框架, 框架中每个功能以回调函数实现 为了方便测试, 整体框架和功能函数可以分开测试 在封装成对象之前, 必须考虑成员值是需要复制还是指向指针 考虑因素: 内存开销, 成员调用频率, 外部修改成员值 ","date":"2022-02-09","objectID":"/zh-cn/post/memo/program/program/:1:0","series":null,"tags":["编程","备忘","更多"],"title":"程序","uri":"/zh-cn/post/memo/program/program/#程序"},{"categories":["Windows","命令","更多"],"content":"纪录一些可能有用的，不经常使用的windows命令。 ","date":"2021-12-17","objectID":"/zh-cn/post/memo/windows-cmd/windows-cmd/:0:0","series":null,"tags":["Windows","命令","更多"],"title":"Window 命令","uri":"/zh-cn/post/memo/windows-cmd/windows-cmd/#"},{"categories":["Windows","命令","更多"],"content":" 1 Contents 定时关机 ","date":"2021-12-17","objectID":"/zh-cn/post/memo/windows-cmd/windows-cmd/:1:0","series":null,"tags":["Windows","命令","更多"],"title":"Window 命令","uri":"/zh-cn/post/memo/windows-cmd/windows-cmd/#contents"},{"categories":["Windows","命令","更多"],"content":" 2 定时关机 bash shutdown -s -t [second] 比如: bash # 1个小时后关机 shutdown -s -t 3600 ","date":"2021-12-17","objectID":"/zh-cn/post/memo/windows-cmd/windows-cmd/:2:0","series":null,"tags":["Windows","命令","更多"],"title":"Window 命令","uri":"/zh-cn/post/memo/windows-cmd/windows-cmd/#定时关机"},{"categories":["Windows","命令","更多"],"content":" 2.1 取消定时关机 bash shutdown -a ","date":"2021-12-17","objectID":"/zh-cn/post/memo/windows-cmd/windows-cmd/:2:1","series":null,"tags":["Windows","命令","更多"],"title":"Window 命令","uri":"/zh-cn/post/memo/windows-cmd/windows-cmd/#取消定时关机"},{"categories":["更多"],"content":" 1 Homeassitant docker 安装docker-compose.yml yml version: \"3\" services: homeassitant: container_name: homeassistant image: homeassistant/home-assistant restart: unless-stopped network_mode: host privileged: true # environment: # - https_proxy=http://172.16.8.168:8123 volumes: - /root/homeassistant/config:/config - /etc/localtime:/etc/localtime:ro 创建并运行 docker bash docker-compose up -d ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:1:0","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#homeassitant-docker-安装"},{"categories":["更多"],"content":" 2 HACS 安装 (Integrations of the community store/社区插件)如果 hacs 没有安装, 可以手动安装 bash # 进入docker容器 docker exec -it homeassistant bash # 运行hacs安装脚本 wget -O - https://get.hacs.xyz | bash - # 退出容器 exit 完成之后, 重启 homeassistant docker 或者重启服务(在配置中的服务控制)。 如果连接 hacs.xyz 太慢, 可以在 docker compose 文件中的 environment 添加 https 代理. 更多的信息, 请参考官方指南 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:2:0","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#hacs-安装-integrations-of-the-community-store社区插件"},{"categories":["更多"],"content":" 3 插件/Integrations因为网络问题, 大多数插件我都是手动安装的. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:3:0","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#插件integrations"},{"categories":["更多"],"content":" 3.1 主题/Themes这里使用了 lovelace-ios-dark-mode-theme 主题作为参考 bash # 下载主题 git clone https://github.com/basnijholt/lovelace-ios-dark-mode-theme.git PATH/TO/HOMESSISTANT/config/themes 添加下面两行到 PATH/TO/HOMESSISTANT/config/configuration.yaml yml frontend: themes: !include_dir_merge_named themes 最后, 重启 homeassistant 服务以及在用户的主题下更改主题 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:3:1","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#主题themes"},{"categories":["更多"],"content":" 3.2 HomeKit 直接下载 home assistant 官方 HomeKit 插件 在通知中, 用苹果设备配对二维码或者 8 个数字 完成 HomeKit 配置 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:3:2","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#homekit"},{"categories":["更多"],"content":" 3.3 小米/XiaoMi MIoT (Pending) bash git clone https://github.com/ha0y/xiaomi_miot_raw.git cp -dr ./xiaomi_miot_raw/custom_components/xiaomi_miot_raw PATH/TO/HOMESSISTANT/config/custom_components # restart homeassistant docker or restart server in Server Controls in Configuration docker restart homeassistant 最后, 设置小米的账户 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:3:3","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#小米xiaomi-miot-pending"},{"categories":["更多"],"content":" 4 设置 IOS 的家庭\u0026快捷方式/Home\u0026Shortcut下面几点是我在设置 IOS 所遇到的问题 家庭 app 只能在家庭局域网中连接 还没找到方案 家庭/快捷指令 app 无法设置只开或者只关的动作 解决只开或者只关的动作后, 家庭 app 中的按钮状态(亮或者暗)与实际智能设备状态不一致. 因为只要单向动作只需要运行, 不需要’关’运行. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:4:0","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#设置-ios-的家庭快捷方式homeshortcut"},{"categories":["更多"],"content":" 4.1 只开或者只关的动作因为默认的家庭 app 开关可以开和关, 但是没有只开和只关功能. 这只能通过 homeassistant 的脚本功能来实现. 这需要在配置/脚本中配置. 这个功能也可以预设智能设备的值, 比如设置灯光亮度值等. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:4:1","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#只开或者只关的动作"},{"categories":["更多"],"content":" 4.2 IOS 的家庭\u0026快捷方式/ome\u0026Shortcut所有脚本都设置完成后, 家庭 app 中的配件可能不会显示脚本. 需要重新配置 HomeKit 插件配置, 配置中先移除再添加脚本元素. 在快捷方式app中, 这种单向动作最号需要触发2次, 因为第二次动作可以把开关图标状态变暗. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/homeassitant/homeassistant/:4:2","series":null,"tags":["智能家居","更多"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/homeassitant/homeassistant/#ios-的家庭快捷方式omeshortcut"},{"categories":["更多"],"content":" 1 Homeassitant docker 安装docker-compose.yml yml version: \"3\" services: homeassitant: container_name: homeassistant image: homeassistant/home-assistant restart: unless-stopped network_mode: host privileged: true # environment: # - https_proxy=http://172.16.8.168:8123 volumes: - /root/homeassistant/config:/config - /etc/localtime:/etc/localtime:ro 创建并运行 docker bash docker-compose up -d ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:1:0","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#homeassitant-docker-安装"},{"categories":["更多"],"content":" 2 HACS 安装 (Integrations of the community store/社区插件)如果 hacs 没有安装, 可以手动安装 bash # 进入docker容器 docker exec -it homeassistant bash # 运行hacs安装脚本 wget -O - https://get.hacs.xyz | bash - # 退出容器 exit 完成之后, 重启 homeassistant docker 或者重启服务(在配置中的服务控制)。 如果连接 hacs.xyz 太慢, 可以在 docker compose 文件中的 environment 添加 https 代理. 更多的信息, 请参考官方指南 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:2:0","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#hacs-安装-integrations-of-the-community-store社区插件"},{"categories":["更多"],"content":" 3 插件/Integrations因为网络问题, 大多数插件我都是手动安装的. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:3:0","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#插件integrations"},{"categories":["更多"],"content":" 3.1 主题/Themes这里使用了 lovelace-ios-dark-mode-theme 主题作为参考 bash # 下载主题 git clone https://github.com/basnijholt/lovelace-ios-dark-mode-theme.git PATH/TO/HOMESSISTANT/config/themes 添加下面两行到 PATH/TO/HOMESSISTANT/config/configuration.yaml yml frontend: themes: !include_dir_merge_named themes 最后, 重启 homeassistant 服务以及在用户的主题下更改主题 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:3:1","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#主题themes"},{"categories":["更多"],"content":" 3.2 HomeKit 直接下载 home assistant 官方 HomeKit 插件 在通知中, 用苹果设备配对二维码或者 8 个数字 完成 HomeKit 配置 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:3:2","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#homekit"},{"categories":["更多"],"content":" 3.3 小米/XiaoMi MIoT (Pending) bash git clone https://github.com/ha0y/xiaomi_miot_raw.git cp -dr ./xiaomi_miot_raw/custom_components/xiaomi_miot_raw PATH/TO/HOMESSISTANT/config/custom_components # restart homeassistant docker or restart server in Server Controls in Configuration docker restart homeassistant 最后, 设置小米的账户 ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:3:3","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#小米xiaomi-miot-pending"},{"categories":["更多"],"content":" 4 设置 IOS 的家庭\u0026快捷方式/Home\u0026Shortcut下面几点是我在设置 IOS 所遇到的问题 家庭 app 只能在家庭局域网中连接 还没找到方案 家庭/快捷指令 app 无法设置只开或者只关的动作 解决只开或者只关的动作后, 家庭 app 中的按钮状态(亮或者暗)与实际智能设备状态不一致. 因为只要单向动作只需要运行, 不需要’关’运行. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:4:0","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#设置-ios-的家庭快捷方式homeshortcut"},{"categories":["更多"],"content":" 4.1 只开或者只关的动作因为默认的家庭 app 开关可以开和关, 但是没有只开和只关功能. 这只能通过 homeassistant 的脚本功能来实现. 这需要在配置/脚本中配置. 这个功能也可以预设智能设备的值, 比如设置灯光亮度值等. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:4:1","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#只开或者只关的动作"},{"categories":["更多"],"content":" 4.2 IOS 的家庭\u0026快捷方式/ome\u0026Shortcut所有脚本都设置完成后, 家庭 app 中的配件可能不会显示脚本. 需要重新配置 HomeKit 插件配置, 配置中先移除再添加脚本元素. 在快捷方式app中, 这种单向动作最号需要触发2次, 因为第二次动作可以把开关图标状态变暗. ","date":"2021-11-24","objectID":"/zh-cn/post/docker/plex/plex/:4:2","series":null,"tags":["更多","智能家居"],"title":"Homeassitant 部署","uri":"/zh-cn/post/docker/plex/plex/#ios-的家庭快捷方式omeshortcut"},{"categories":["备忘","更多"],"content":"-- 介绍","date":"2021-11-03","objectID":"/zh-cn/post/memo/memo/memo/","series":null,"tags":["备忘","更多"],"title":"备忘","uri":"/zh-cn/post/memo/memo/memo/"},{"categories":["备忘","更多"],"content":" 1 —— 介绍","date":"2021-11-03","objectID":"/zh-cn/post/memo/memo/memo/:1:0","series":null,"tags":["备忘","更多"],"title":"备忘","uri":"/zh-cn/post/memo/memo/memo/#-介绍"},{"categories":["备忘","更多"],"content":" 2 背景现在, 网络的铺设已经从地面供应延伸到了近地轨道卫星, 网络的覆盖面获得了极大的提升. 它超越了空间上的限制, 每个人都可以把自己的感受, 知识, 经验分享到网络上. 因此, 人们获得知识的渠道已经从图书馆转移到了网络. 进一步导致了人们获得的知识的深度还是广度都得到了极大的提升. 无论何种知识, 都可以在网络上找到相关的博客, 笔记详细的解释其原理以及用法. ","date":"2021-11-03","objectID":"/zh-cn/post/memo/memo/memo/:2:0","series":null,"tags":["备忘","更多"],"title":"备忘","uri":"/zh-cn/post/memo/memo/memo/#背景"},{"categories":["备忘","更多"],"content":" 3 目的 在这个部分, 我只要会记录一些我所使用过的知识以及简短的使用感受 同时, 我也会将一些感觉有用的但是还没使用过的知识放入这个部分的收录 力求精简 以便之后重新浏览时的举一反三 提高搜索效率 ","date":"2021-11-03","objectID":"/zh-cn/post/memo/memo/memo/:3:0","series":null,"tags":["备忘","更多"],"title":"备忘","uri":"/zh-cn/post/memo/memo/memo/#目的"},{"categories":["备忘","更多"],"content":" 1 编程 命令行中格式化显示文字 (X) 还在寻找方法. ‘\\t’ 并不能很好的对齐. 考虑尝试 ‘imgui’ abc 1.1 ","date":"2021-11-03","objectID":"/zh-cn/post/memo/golang/golang/:1:0","series":null,"tags":["Golang","备忘","更多"],"title":"Golang","uri":"/zh-cn/post/memo/golang/golang/#编程"},{"categories":["备忘","更多"],"content":" 2 网络","date":"2021-11-03","objectID":"/zh-cn/post/memo/golang/golang/:2:0","series":null,"tags":["Golang","备忘","更多"],"title":"Golang","uri":"/zh-cn/post/memo/golang/golang/#网络"},{"categories":["备忘"],"content":" 1 Contents 组件中双向数据流动(@Input \u0026 @Output) ","date":"2021-11-03","objectID":"/zh-cn/post/memo/angular/angular/:1:0","series":null,"tags":["备忘","Angular"],"title":"Angular","uri":"/zh-cn/post/memo/angular/angular/#contents"},{"categories":["备忘"],"content":" 2 组件中双向数据流动","date":"2021-11-03","objectID":"/zh-cn/post/memo/angular/angular/:2:0","series":null,"tags":["备忘","Angular"],"title":"Angular","uri":"/zh-cn/post/memo/angular/angular/#组件中双向数据流动"},{"categories":["备忘"],"content":" 2.1 有时候, 数据无法传递. 丢弃 @Input value 和 @Output valueChange 无法准确检测 value 值已经改变. 在多次继承下尤其明显. 会尝试使用传值@ViewChild 或者@ViewChildren 母子组件的双向数据流动会使用@Input 和@Output 来修饰变量. 更多的细节参考官方导向 ts // Import Input, Output and EventEmitter import { Input, Output, EventEmitter } from \"@angular/core\"; ","date":"2021-11-03","objectID":"/zh-cn/post/memo/angular/angular/:2:1","series":null,"tags":["备忘","Angular"],"title":"Angular","uri":"/zh-cn/post/memo/angular/angular/#有时候-数据无法传递-丢弃"},{"categories":["Proxmox"],"content":"记录使用过的 Proxmox VE 命令。 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:0:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#"},{"categories":["Proxmox"],"content":" 1 目录 转换 img 磁盘 添加/重新扫描未显示的磁盘映像 直通 sata 盘 删除 PVE 集群节点 重新安装 ceph 固定内核版本 强制刪除 snapshot 解锁虚拟机 解锁 lxc 容器 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:1:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#目录"},{"categories":["Proxmox"],"content":" 2 转换 img 磁盘将.img 的镜像转换为虚拟机(VM)的磁盘。 这里的例子是转换 openWRT 镜像到虚拟机的磁盘。 sh qm importdisk [VM id] [image path] [storage id] 比如: sh qm importdisk 100 ./openwrt.img local-lvm ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:2:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#转换-img-磁盘"},{"categories":["Proxmox"],"content":" 3 重新扫描未显示的磁盘映像一下命令会自动扫描虚拟机中所有磁盘, 并且会自动把未显示的磁盘添加到虚拟机配置文件中 bash qm rescan --vmid [VM id] 比如: bash qm rescan --vmid 100 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:3:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#重新扫描未显示的磁盘映像"},{"categories":["Proxmox"],"content":" 4 直通 sata 盘 bash # 显示所有 sata drivers ls -l /dev/disk/by-id/ # add sata to virtual machine, where sataX is sata0, sata1 ... # 添加sata盘到虚拟机, 其中sataX可以是 sata0, sata1 ... qm set 100 -sataX /dev/disk/by-id/xxxxx # 例子: # 不要使用带part1, part2 ... 尾缀的, 比如 /dev/disk/by-id/xxxxx-part1 qm set 100 -sata0 /dev/disk/by-id/xxxxx ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:4:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#直通-sata-盘"},{"categories":["Proxmox"],"content":" 5 删除 PVE 集群节点 bash # 显示所有节点以及其信息 pvecm nodes # 删除节点 pvecm delnode [NodeName] # 显示所有节点的配置文件夹 ls -l /etc/pve/nodes/ # 删除或者移动到别的位置 mv /etc/pve/nodes/[NodeName] /root/[NodeName] 比如: bash # 删除 pve-node3 这个节点 pvecm nodes pvecm delnode pve-node3 ls -l /etc/pve/nodes/ mv /etc/pve/nodes/pve-node3 /root/pve-node3 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:5:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#删除-pve-集群节点"},{"categories":["Proxmox"],"content":" 6 重新安装 ceph bash rm -rf /etc/systemd/system/ceph* killall -9 ceph-mon ceph-mgr ceph-mds rm -rf /var/lib/ceph/mon/ /var/lib/ceph/mgr/ /var/lib/ceph/mds/ pveceph purge apt purge ceph-mon ceph-osd ceph-mgr ceph-mds rm /etc/init.d/ceph for i in $(apt search ceph | grep installed | awk -F/ '{print $1}'); do apt reinstall $i; done dpkg-reconfigure ceph-base dpkg-reconfigure ceph-mds dpkg-reconfigure ceph-common dpkg-reconfigure ceph-fuse for i in $(apt search ceph | grep installed | awk -F/ '{print $1}'); do apt reinstall $i; done pveceph install ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:6:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#重新安装-ceph"},{"categories":["Proxmox"],"content":" 7 固定内核版本最新的内核版本可能不支持老的硬件, 需要固定老版本的内核 bash proxmox-boot-tool kernel pin [KernelVersion] 比如: bash proxmox-boot-tool kernel pin 5.13.19-6-pve ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:7:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#固定内核版本"},{"categories":["Proxmox"],"content":" 8 强制刪除 Snapshot bash qm delsnapshot [VMID] [SnapshotName] --force 比如: bash qm delsnapshot 100 update00 --force ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:8:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#强制刪除-snapshot"},{"categories":["Proxmox"],"content":" 9 解锁虚拟机 bash qm unlock [vmid] Examples: bash qm unlock 100 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:9:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#解锁虚拟机"},{"categories":["Proxmox"],"content":" 10 解锁 lxc 容器 bash lct unlock [lxc-id] Examples: bash lct unlock 100 ","date":"2020-11-15","objectID":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/:10:0","series":null,"tags":["Proxmox","PVE","命令"],"title":"Proxmox 命令","uri":"/zh-cn/post/proxmox/proxmox-cmd/proxmox-cmd/#解锁-lxc-容器"},{"categories":["Linux","更多"],"content":"纪录一些可能有用的，不经常使用的命令。 ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:0:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#"},{"categories":["Linux","更多"],"content":" 1 目录 iperf3 - 测试网络速度 qemu - 转换磁盘映像 base64 - 加密和解密 smartctl - 查看ssd健康 ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:1:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#目录"},{"categories":["Linux","更多"],"content":" 2 iperf3测试设备间网络速度。 先开启服务端 iperf/iperf3 服务， 再用客户端 iperf/iperf3 测速。 windows 下为 iperf3.exe 应用。 ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:2:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#iperf3"},{"categories":["Linux","更多"],"content":" 2.1 服务端开启 bash iperf3 -s -p 5201 ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:2:1","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#服务端开启"},{"categories":["Linux","更多"],"content":" 2.2 客户端开启 bash iperf3 -c [ip address] -p 5201 ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:2:2","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#客户端开启"},{"categories":["Linux","更多"],"content":" 3 Qemu 转换磁盘映像 bash qemu-img convert -f [格式] -O [输出的格式] vm-114-disk-0.qcow2 vm-114-disk-0.raw 比如: bash # 转换 qcow2 成 raw 磁盘映像 qemu-img convert -f qcow2 -O raw vm-114-disk-0.qcow2 vm-114-disk-0.raw ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:3:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#qemu-转换磁盘映像"},{"categories":["Linux","更多"],"content":" 4 base64 加密和解密加密: bash echo 'YourText' | base64 生成伪随机数的base64 bash head -c32 /dev/urandom | base64 解密: bash echo 'WW91clRleHQK' | base64 --decode ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:4:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#base64-加密和解密"},{"categories":["Linux","更多"],"content":" 5 macos 查看ssd健康 bash smartctl -a [device id] ","date":"2020-10-27","objectID":"/zh-cn/post/memo/command/command/:5:0","series":null,"tags":["Linux","命令","更多"],"title":"类unix系统命令","uri":"/zh-cn/post/memo/command/command/#macos-查看ssd健康"},{"categories":["Proxmox"],"content":"由于国内连接国外官方源速度不开，所以需要更换软件源。 而且Proxmox官方源需要订阅，但是家庭使用只要免费的社区源， 也需要更换Proxmox的软件源。 这里会用到阿里云源 和中科大源。 ","date":"2020-07-19","objectID":"/zh-cn/post/proxmox/sources/sources/:0:0","series":null,"tags":["Proxmox","PVE"],"title":"Proxmox 换源","uri":"/zh-cn/post/proxmox/sources/sources/#"},{"categories":["Proxmox"],"content":" 1 Debian 换源因为Proxmox是基于Debian，所以需要更换debian国内源。 注释掉所有 /etc/apt/sources.list 文件的内容，并添加(需要root权限): bash deb http://mirrors.aliyun.com/debian/ buster main non-free contrib deb-src http://mirrors.aliyun.com/debian/ buster main non-free contrib deb http://mirrors.aliyun.com/debian-security buster/updates main deb-src http://mirrors.aliyun.com/debian-security buster/updates main deb http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib deb-src http://mirrors.aliyun.com/debian/ buster-updates main non-free contrib deb http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib deb-src http://mirrors.aliyun.com/debian/ buster-backports main non-free contrib ","date":"2020-07-19","objectID":"/zh-cn/post/proxmox/sources/sources/:1:0","series":null,"tags":["Proxmox","PVE"],"title":"Proxmox 换源","uri":"/zh-cn/post/proxmox/sources/sources/#debian-换源"},{"categories":["Proxmox"],"content":" 2 Proxmox 社区源首先，删除Proxmox企业源： bash rm -rf /etc/apt/sources.list.d/pve-enterprise.list 下载密钥: bash wget http://download.proxmox.com/debian/proxmox-ve-release-6.x.gpg -O /etc/apt/trusted.gpg.d/proxmox-ve-release-6.x.gpg 添加中科大源: bash echo \"deb https://mirrors.ustc.edu.cn/proxmox/debian/pve buster pve-no-subscription\" \u003e /etc/apt/sources.list.d/pve-no-subscription.list 完成！ ","date":"2020-07-19","objectID":"/zh-cn/post/proxmox/sources/sources/:2:0","series":null,"tags":["Proxmox","PVE"],"title":"Proxmox 换源","uri":"/zh-cn/post/proxmox/sources/sources/#proxmox-社区源"},{"categories":[],"content":" 1 关于我about me 支持开源，喜欢折腾，广而不精，劳逸结合(懒)，沉默寡言 现阶段非常的迷茫，正在寻找方向和目标 公钥: https://keybase.io/wtpersonal/key.asc 或者 https://publicr2.wtpersonal.stream/key.asc ","date":"2020-07-03","objectID":"/zh-cn/about/:1:0","series":null,"tags":[],"title":"关于","uri":"/zh-cn/about/#关于我"},{"categories":["Hugo"],"content":" 1 背景很早之前就听说过Github推出了一个叫Git Page的产品 … ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:1:0","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#背景"},{"categories":["Hugo"],"content":" 2 准备因为在很多开发，部署，测试的情况需要下载很多依赖， 所以我不会在我的windows主力机上做开发。 因此ubuntu虚拟机和windows10的linux子系统是我主要开发平台。 如果要使用LoveIt主题的Sass/SCSS，必须安装extended标签的hugo。 现在GO源码安装能同时自动安装相应依赖，所以现在从源码安装也很方便。 但是请做好GO代理。 Git Go(1.11版本以上) ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:2:0","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#准备"},{"categories":["Hugo"],"content":" 3 安装 Hugo首先，下载Hugo源码。 可以从Hugo github主页上git clone， 也可以像我我一样用go get，同时他也会下载依赖(请做好代理): bash git clone https://github.com/gohugoio/hugo 再进入Go源码文件夹下hugo的文件夹: bash cd hugo 这里会使用Sass/SCSS，所以在用Go安装的时候会用extended的tag。 安装(请做好代理): bash CGO_ENABLED=1 go install --tags extended 最后查看hugo是否成功安装(如果是全局代理的, 现在可以取消了): bash hugo version ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:3:0","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#安装-hugo"},{"categories":["Hugo"],"content":" 4 使用Hugo","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:0","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#使用hugo"},{"categories":["Hugo"],"content":" 4.1 Hugo \u0026 Git 初始化首先，创建或使用一个空文件夹作为你的私有或公共的git仓库。 利用hugo new会创建一个新的文件夹并且会在文件夹下生成一个新的网站结构: bash hugo new side my_website cd my_website 并初始化为git仓库，可以使用**git add .和git commit -m “comment”**提交第一次记录: bash git init 因为网站的主题是LoveIt, 所以需要克隆LoveIt的主题到themes目录: bash git submodule add https://github.com/dillonzq/LoveIt.git themes/LoveIt ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:1","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#hugo--git-初始化"},{"categories":["Hugo"],"content":" 4.2 Hugo \u0026 LoveIt 配置网页的配置文件是config.toml, 可以参考LoveIt的配置文件以及我的配置: LoveIt官方配置 这个网站的配置(还没想好怎么贴) ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:2","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#hugo--loveit-配置"},{"categories":["Hugo"],"content":" 4.3 文章创作利用hugo生成不同语言的文章first_post.language.md bash hugo new posts/first_post.zh-cn.md 之后就可以直接编辑content/posts/first_post.zh-cn.md文件 ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:3","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#文章创作"},{"categories":["Hugo"],"content":" 4.4 预览网站本地启动网站: bash hugo server --buildDrafts --bind=0.0.0.0 -D/–buildDrafts 用来渲染文件; –bind=0.0.0.0 允许所有ip能登录你的本地网站 yourIP:1313 ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:4","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#预览网站"},{"categories":["Hugo"],"content":" 4.5 生成最终网站修改完网站的内容之后， 需要生成能够部署在github page上的文件(需要修改文章中draft: false): bash hugo 会生成public的文件夹。 将public文件夹下内容git commit(需要git初始化)记录之后就可以上传到对应的github page的仓库上。 ","date":"2020-07-01","objectID":"/zh-cn/post/hugo/loveit/loveit/:4:5","series":null,"tags":["Hugo","LoveIt"],"title":"折腾Hugo静态网站","uri":"/zh-cn/post/hugo/loveit/loveit/#生成最终网站"}]