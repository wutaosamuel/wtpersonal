<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>备忘 on WTPersonal</title><link>https://wtpersonal.stream/zh-cn/categories/%E5%A4%87%E5%BF%98/</link><description>Recent content in 备忘 on WTPersonal</description><generator>Hugo</generator><language>zh-CN</language><lastBuildDate>Thu, 23 Jan 2025 20:29:20 +0800</lastBuildDate><atom:link href="https://wtpersonal.stream/zh-cn/categories/%E5%A4%87%E5%BF%98/index.xml" rel="self" type="application/rss+xml"/><item><title>C语言的函数</title><link>https://wtpersonal.stream/zh-cn/post/memo/c-function/c-function/</link><pubDate>Thu, 23 Jan 2025 20:29:20 +0800</pubDate><guid>https://wtpersonal.stream/zh-cn/post/memo/c-function/c-function/</guid><description>&lt;p>C的函数&lt;/p>
&lt;h2 id="目录" class="headerLink">
 &lt;a href="#%e7%9b%ae%e5%bd%95" class="header-mark">&lt;/a>目录&lt;/h2>&lt;ol>
&lt;li>&lt;a href="#%e6%8a%8a%e5%ad%97%e7%ac%a6%e4%b8%b2%e8%b5%8b%e5%80%bc%e5%88%b0%e5%8f%98%e9%87%8f%e4%b8%ad" rel="">把字符串赋值到变量中&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="把字符串赋值到变量中" class="headerLink">
 &lt;a href="#%e6%8a%8a%e5%ad%97%e7%ac%a6%e4%b8%b2%e8%b5%8b%e5%80%bc%e5%88%b0%e5%8f%98%e9%87%8f%e4%b8%ad" class="header-mark">&lt;/a>把字符串赋值到变量中&lt;/h2>
&lt;div class="table-wrapper">
 &lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: ">函数&lt;/th>
 &lt;th style="text-align: ">头文件&lt;/th>
 &lt;th style="text-align: ">描述&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: ">sprintf&lt;/td>
 &lt;td style="text-align: ">string.h&lt;/td>
 &lt;td style="text-align: ">把格式化的字符串赋值到变量中. sprintf(str, &amp;ldquo;%s %s\n&amp;rdquo;, s1, s2)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: ">strncpy&lt;/td>
 &lt;td style="text-align: ">string.h&lt;/td>
 &lt;td style="text-align: ">把别的变量的字符串赋到变量中. strncpy(str, source, length)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
 &lt;/table>
&lt;/div></description></item><item><title>OpenWRT</title><link>https://wtpersonal.stream/zh-cn/post/memo/openwrt/openwrt/</link><pubDate>Sat, 28 May 2022 17:52:50 +0800</pubDate><guid>https://wtpersonal.stream/zh-cn/post/memo/openwrt/openwrt/</guid><description>&lt;p>OpenWRT&lt;/p>
&lt;h2 id="目录" class="headerLink">
 &lt;a href="#%e7%9b%ae%e5%bd%95" class="header-mark">&lt;/a>目录&lt;/h2>&lt;ol>
&lt;li>&lt;a href="#%e5%ad%90%e5%9f%9f%e5%90%8d%e5%8f%8a%e5%a4%9a%e7%ba%a7%e5%9f%9f%e5%90%8d%e7%9a%84-IP-%e9%80%9a%e9%85%8d" rel="">子域名及多级域名的 IP 通配&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="子域名及多级域名的-ip-通配" class="headerLink">
 &lt;a href="#%e5%ad%90%e5%9f%9f%e5%90%8d%e5%8f%8a%e5%a4%9a%e7%ba%a7%e5%9f%9f%e5%90%8d%e7%9a%84-ip-%e9%80%9a%e9%85%8d" class="header-mark">&lt;/a>子域名及多级域名的 IP 通配&lt;/h2>&lt;h3 id="介绍" class="headerLink">
 &lt;a href="#%e4%bb%8b%e7%bb%8d" class="header-mark">&lt;/a>介绍&lt;/h3>&lt;p>IP 可以在 &lt;strong>网络 -&amp;gt; DHCP/DNS -&amp;gt; 静态地址&lt;/strong> 固定.
默认的本地域名是根据主机名来的.
例子: &lt;strong>ubuntuNginx.lan&lt;/strong> 是 &lt;strong>ubuntuNginx&lt;/strong> 机器的本地域名.&lt;/p></description></item><item><title>Golang</title><link>https://wtpersonal.stream/zh-cn/post/memo/golang/golang/</link><pubDate>Wed, 03 Nov 2021 17:07:13 +0800</pubDate><guid>https://wtpersonal.stream/zh-cn/post/memo/golang/golang/</guid><description>&lt;h2 id="编程" class="headerLink">
 &lt;a href="#%e7%bc%96%e7%a8%8b" class="header-mark">&lt;/a>编程&lt;/h2>&lt;ul>
&lt;li>命令行中格式化显示文字 (X)
&lt;ul>
&lt;li>还在寻找方法. &amp;lsquo;\t&amp;rsquo; 并不能很好的对齐.&lt;/li>
&lt;li>考虑尝试 &amp;lsquo;imgui&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>abc
&lt;ul>
&lt;li>1.1&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="网络" class="headerLink">
 &lt;a href="#%e7%bd%91%e7%bb%9c" class="header-mark">&lt;/a>网络&lt;/h2></description></item><item><title>Angular</title><link>https://wtpersonal.stream/zh-cn/post/memo/angular/angular/</link><pubDate>Wed, 03 Nov 2021 17:07:04 +0800</pubDate><guid>https://wtpersonal.stream/zh-cn/post/memo/angular/angular/</guid><description>&lt;h2 id="contents" class="headerLink">
 &lt;a href="#contents" class="header-mark">&lt;/a>Contents&lt;/h2>&lt;ol>
&lt;li>&lt;a href="%e7%bb%84%e4%bb%b6%e4%b8%ad%e5%8f%8c%e5%90%91%e6%95%b0%e6%8d%ae%e6%b5%81%e5%8a%a8" rel="">组件中双向数据流动(@Input &amp;amp; @Output)&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="组件中双向数据流动" class="headerLink">
 &lt;a href="#%e7%bb%84%e4%bb%b6%e4%b8%ad%e5%8f%8c%e5%90%91%e6%95%b0%e6%8d%ae%e6%b5%81%e5%8a%a8" class="header-mark">&lt;/a>组件中双向数据流动&lt;/h2>&lt;h3 id="有时候-数据无法传递-丢弃" class="headerLink">
 &lt;a href="#%e6%9c%89%e6%97%b6%e5%80%99-%e6%95%b0%e6%8d%ae%e6%97%a0%e6%b3%95%e4%bc%a0%e9%80%92-%e4%b8%a2%e5%bc%83" class="header-mark">&lt;/a>有时候, 数据无法传递. 丢弃&lt;/h3>&lt;ul>
&lt;li>@Input value 和 @Output valueChange 无法准确检测 value 值已经改变. 在多次继承下尤其明显.&lt;/li>
&lt;li>会尝试使用传值@ViewChild 或者@ViewChildren&lt;/li>
&lt;/ul>
&lt;p>母子组件的双向数据流动会使用@Input 和@Output 来修饰变量. 更多的细节参考&lt;a href="https://angular.io/guide/inputs-outputs" target="_blank" rel="noopener noreferrer">官方导向&lt;/a>&lt;/p></description></item></channel></rss>