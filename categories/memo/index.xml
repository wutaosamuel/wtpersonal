<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Memo on WTPersonal</title><link>https://wtpersonal.stream/categories/memo/</link><description>Recent content in Memo on WTPersonal</description><generator>Hugo</generator><language>en</language><lastBuildDate>Thu, 23 Jan 2025 20:29:20 +0800</lastBuildDate><atom:link href="https://wtpersonal.stream/categories/memo/index.xml" rel="self" type="application/rss+xml"/><item><title>Program C functions</title><link>https://wtpersonal.stream/post/memo/c-function/c-function/</link><pubDate>Thu, 23 Jan 2025 20:29:20 +0800</pubDate><guid>https://wtpersonal.stream/post/memo/c-function/c-function/</guid><description>&lt;p>C related functions&lt;/p>
&lt;h2 id="contents" class="headerLink">
 &lt;a href="#contents" class="header-mark">&lt;/a>Contents&lt;/h2>&lt;ol>
&lt;li>&lt;a href="#assign-string-to-variable" rel="">Assign string to variable&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="assign-string-to-variable" class="headerLink">
 &lt;a href="#assign-string-to-variable" class="header-mark">&lt;/a>Assign string to variable&lt;/h2>
&lt;div class="table-wrapper">
 &lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th style="text-align: ">Func&lt;/th>
 &lt;th style="text-align: ">Header&lt;/th>
 &lt;th style="text-align: ">Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td style="text-align: ">sprintf&lt;/td>
 &lt;td style="text-align: ">string.h&lt;/td>
 &lt;td style="text-align: ">assign format string to variable. sprintf(str, &amp;ldquo;%s %s\n&amp;rdquo;, s1, s2)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td style="text-align: ">strncpy&lt;/td>
 &lt;td style="text-align: ">string.h&lt;/td>
 &lt;td style="text-align: ">copy string from a variable to another. strncpy(str, source, length)&lt;/td>
 &lt;/tr>
 &lt;/tbody>
 &lt;/table>
&lt;/div></description></item><item><title>OpenWRT</title><link>https://wtpersonal.stream/post/memo/openwrt/openwrt/</link><pubDate>Sat, 28 May 2022 17:52:50 +0800</pubDate><guid>https://wtpersonal.stream/post/memo/openwrt/openwrt/</guid><description>&lt;p>OpenWRT&lt;/p>
&lt;h2 id="contents" class="headerLink">
 &lt;a href="#contents" class="header-mark">&lt;/a>Contents&lt;/h2>&lt;ol>
&lt;li>&lt;a href="#wildcard-domain-&amp;amp;-subdomain" rel="">Wildcard Domain&amp;amp;Subdomain&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="wildcard-domain--subdomain" class="headerLink">
 &lt;a href="#wildcard-domain--subdomain" class="header-mark">&lt;/a>Wildcard Domain &amp;amp; Subdomain&lt;/h2>&lt;h3 id="introduction" class="headerLink">
 &lt;a href="#introduction" class="header-mark">&lt;/a>Introduction&lt;/h3>&lt;p>The IP address can be fixed manually in &lt;strong>Network -&amp;gt; DHCP and DNS -&amp;gt; Static Leases&lt;/strong>.
The default local domain will be automatically allocated by hostname.
For instance, &lt;strong>ubuntuNginx.lan&lt;/strong> is the local domain of &lt;strong>ubuntuNginx&lt;/strong> machine.&lt;/p></description></item><item><title>Angular</title><link>https://wtpersonal.stream/post/memo/angular/angular/</link><pubDate>Wed, 03 Nov 2021 17:07:04 +0800</pubDate><guid>https://wtpersonal.stream/post/memo/angular/angular/</guid><description>&lt;h2 id="contents" class="headerLink">
 &lt;a href="#contents" class="header-mark">&lt;/a>Contents&lt;/h2>&lt;ol>
&lt;li>&lt;a href="bidirectional-data-flow-between-components" rel="">Bidirectional data flow between components(@Input &amp;amp; @Output)&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="bidirectional-data-flow-between-components" class="headerLink">
 &lt;a href="#bidirectional-data-flow-between-components" class="header-mark">&lt;/a>Bidirectional data flow between components&lt;/h2>&lt;h3 id="sometimes-not-work-very-well-abandon" class="headerLink">
 &lt;a href="#sometimes-not-work-very-well-abandon" class="header-mark">&lt;/a>Sometimes, not work very well. ABANDON&lt;/h3>&lt;ul>
&lt;li>@Input value and @Output valueChange cannot detect value change when child component valueChange emit a value, especially, Multiple inheritance.&lt;/li>
&lt;li>next, try to use @ViewChild or @ViewChildren&lt;/li>
&lt;/ul>
&lt;p>Bidirectional data flow between parent component and child component.
It uses @Input and @Output decorates the variables.
The more Input and Output details are at &lt;a href="https://angular.io/guide/inputs-outputs" target="_blank" rel="noopener noreferrer">official angular guide&lt;/a>&lt;/p></description></item><item><title>Golang</title><link>https://wtpersonal.stream/post/memo/golang/golang/</link><pubDate>Wed, 03 Nov 2021 17:07:04 +0800</pubDate><guid>https://wtpersonal.stream/post/memo/golang/golang/</guid><description>&lt;h2 id="programming" class="headerLink">
 &lt;a href="#programming" class="header-mark">&lt;/a>Programming&lt;/h2>&lt;h3 id="format-text-string-in-console-display-x" class="headerLink">
 &lt;a href="#format-text-string-in-console-display-x" class="header-mark">&lt;/a>Format text string in console display (X)&lt;/h3>&lt;ul>
&lt;li>Looking for the solution. The &amp;lsquo;\t&amp;rsquo; did not work, especially, cannot align upper and lower text&lt;/li>
&lt;li>Consider to try &amp;lsquo;imgui&amp;rsquo;&lt;/li>
&lt;/ul>
&lt;h2 id="network" class="headerLink">
 &lt;a href="#network" class="header-mark">&lt;/a>Network&lt;/h2></description></item></channel></rss>